-- phpMyAdmin SQL Dump
-- version 3.5.1
-- http://www.phpmyadmin.net
--
-- Хост: 127.0.0.1
-- Время создания: Май 22 2014 г., 17:00
-- Версия сервера: 5.5.25
-- Версия PHP: 5.3.13

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- База данных: `myrusakov`
--

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_articles`
--

CREATE TABLE IF NOT EXISTS `xyz_articles` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `img` varchar(255) NOT NULL,
  `intro` text NOT NULL,
  `full` text NOT NULL,
  `section_id` int(10) unsigned DEFAULT NULL,
  `cat_id` int(10) unsigned DEFAULT NULL,
  `date` int(10) unsigned NOT NULL,
  `meta_desc` varchar(255) NOT NULL,
  `meta_key` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=7 ;

--
-- Дамп данных таблицы `xyz_articles`
--

INSERT INTO `xyz_articles` (`id`, `title`, `img`, `intro`, `full`, `section_id`, `cat_id`, `date`, `meta_desc`, `meta_key`) VALUES
(1, 'Создание сайта на HTML', 'html-sozdanie-sajta.jpg', '<p>Здравствуйте, меня зовут Михаил Русаков!</p><p>В этой статье я расскажу Вам о создании простейшего сайта. Кто знает, может быть, знания, которые Вы получите в этой статье, впоследствии станут началом Вашего успеха.</p><p>Я склонен полагать, что у Вас имеется большое желание научиться создавать свои собственные сайты. Разумеется, крайне глупо пытаться познать эту науку с изучения какого-нибудь <b>PHP</b>. Гораздо разумнее начать с чего-нибудь попроще, а именно с <b>HTML</b> (<i>HyperText Markup Language</i> - язык гипертекстовой разметки) - базового языка, на котором и построен любой, даже самый сложный сайт. Без этого языка не было бы ни одного сайта, более того, <b>HTML</b> - простейший язык, который может освоить даже школьник (яркий пример - Ваш покорный слуга, начавший осваивать <b>HTML</b> ещё в школе, причём весьма успешно).</p><p>Ладно, хватит болтовни - пора приступать к созданию нашего с Вами первого сайта.</p>', '<p>Здравствуйте, меня зовут Михаил Русаков!</p><p>В этой статье я расскажу Вам о создании простейшего сайта. Кто знает, может быть, знания, которые Вы получите в этой статье, впоследствии станут началом Вашего успеха.</p><p>Я склонен полагать, что у Вас имеется большое желание научиться создавать свои собственные сайты. Разумеется, крайне глупо пытаться познать эту науку с изучения какого-нибудь <b>PHP</b>. Гораздо разумнее начать с чего-нибудь попроще, а именно с <b>HTML</b> (<i>HyperText Markup Language</i> - язык гипертекстовой разметки) - базового языка, на котором и построен любой, даже самый сложный сайт. Без этого языка не было бы ни одного сайта, более того, <b>HTML</b> - простейший язык, который может освоить даже школьник (яркий пример - Ваш покорный слуга, начавший <a title="Освоение HTML" href="http://myrusakov.ru/html-osnovy.html">осваивать HTML</a> ещё в школе, причём весьма успешно).</p><p>Ладно, хватит болтовни - пора приступать к созданию нашего с Вами первого сайта, и этот процесс будет называться: "<a href="http://myrusakov.ru/" title="Создание сайта на HTML">Создание сайта на HTML</a>".</p><p>Первое, что нужно решить: где создавать сайт? Разумеется, можно и в обычном блокноте. Но это несерьёзно (мы так в школе писали), поэтому давайте лучше будем использовать что-нибудь "потяжелее". Я остановил свой выбор на редакторе "<b>Notepad++</b>" - замечательная программа, которая позволяет писать код на огромном количестве языков, в том плане, что это будет весьма и весьма удобно. Не буду сильно её хвалить, потому что для написания кода для серьёзных языков (<b>Java</b>, <b>C++</b> и т. д.) она не подходит - много лишних проблем возникнет. Но для таких языков, как <b>HTML</b>, <b>CSS</b>, <b>JavaScript</b> и даже <b>PHP</b> - очень хороший выбор.</p><p>Скачать <b>Notepad++</b> можно, пройдя по этой ссылке: <a rel="external" title="Notepad++" href="http://notepad-plus.sourceforge.net/ru/site.htm">http://notepad-plus.sourceforge.net/ru/site.htm</a></p><p>Устанавливаем и запускаем редактор. Сразу сохраняем страницу под именем <b>index.html</b>. Теперь пишем (<b>пожалуйста, напишите, а не скопируйте!</b>) в окне редактора:</p><code class="code">&lt;html&gt;<br />&lt;head&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code><p>Написали? Сохранили? Поздравляю Вас, Вы только что создали самую простую (но очень важную!!!) <a title="HTML-страницы" href="http://myrusakov.ru/html.html">HTML-страницу</a>!</p><p>Теперь можно нашу страницу открыть в браузере. Так и поступим.</p><p>Что-нибудь видите? Я уверен, что нет. И это неудивительно, ведь это самая элементарная страница. Вы можете посмотреть исходник страницы. Для этого в меню "<b>Вид</b>" выберите пункт меню "<b>Просмотр HTML кода</b>", "<b>Исходный код страницы</b>" или что-то в этом духе, в зависимости от Вашего браузера. Также можно просто нажать <b>CTRL-U</b> (в большинстве браузеров откроется исходный код страницы), и Вы увидите Ваш код.</p><p>А теперь давайте обсудим, что мы здесь написали.</p><p><b>&lt;html&gt;</b>, <b>&lt;head&gt;</b>, <b>&lt;body&gt;</b> - это открывающие теги. Иногда их ещё называют дескрипторы, но я привык называть их тегами, поэтому далее так и буду писать.</p><p><b>&lt;/html&gt;</b>, <b>&lt;/head&gt;</b>, <b>&lt;/body&gt;</b> - это закрывающие теги.</p><p>Теги бывают парные и одиночные. Парные теги - это теги, которые нуждаются в закрывающем, то есть все три тега, которые мы использовали являются парными, так как они открываются и потом закрываются.</p><p>Одиночные теги - это теги, которые не требуют наличие закрывающего тега.</p><p>Теперь что касается назначения данных тегов.</p><p>Тег <b>&lt;html&gt;</b> означает начало <b>HTML-документа</b>.</p><p>Тег <b>&lt;head&gt;</b> означает начало заголовка <b>HTML-документа</b>. Сюда могут входить, например, заголовок страницы, различные мета-теги. Обо всём об этом погорим чуть ниже.</p><p>Тег <b>&lt;/head&gt;</b> означает конец заголовка <b>HTML-документа</b>.</p><p>Тег <b>&lt;body&gt;</b> означает начало самого документа. То есть всё (текст, картинки, ссылки и т. д.), что Вы видите на страницах в Интернете - всё расположено в теге <b>&lt;body&gt;</b>.</p><p>Тег <b>&lt;/body&gt;</b> означает конец содержимого документа.</p><p>Тег <b>&lt;/html&gt;</b> означает конец <b>HTML-страницы</b>.</p><p>Теперь давайте немного добавим в нашу страницу кода, уж, больно она примитивная у нас пока. Внутри тега <b>&lt;head&gt;</b> добавьте такой код:</p><code class="code">&lt;title&gt;Наша страница&lt;/title&gt;<br />&lt;meta http-equiv="Content-type" content="text/html; charset=windows-1251"&gt;</code><p>Тег <b>&lt;title&gt;</b> определяет заголовок страницы, который будет отображён в заголовке окна браузера.</p><p>Тег <b>&lt;/title&gt;</b> сообщает, что здесь заголовок заканчивается.</p><p>Что касается тега <b>&lt;meta&gt;</b>, то здесь сначала я должен сообщить об атрибутах тегов. У тегов могут быть различные атрибуты, определяющие, например, вид их содержимого. Атрибуты ставятся внутри открывающего тега и имеют следующий вид:</p><p><b>Название = "значение".</b></p><p>Тег <b>&lt;meta&gt;</b> у нас определяет тип содержимого документа. Атрибут <b>http-equiv</b> и его значение <b>Content-type</b> определяет, что сейчас будет описан тип документа. Атрибут <b>content</b> и его значение <b>text/html; charset = windows-1251</b> сообщают браузеру, что данный документ является <b>HTML-документом</b> (<b>text/html</b>), и кодировка этого документа кириллица (<b>windows-1251</b>). Это был пример мета-тегов. Я думаю, что пока с ними хватит.</p><p>Теперь займёмся содержимым документа. Надеюсь, что Вы уже поняли, что раз содержимое страницы - значит, будем писать что-то внутри тега <b>&lt;body&gt;</b>. Давайте напишем следующий код внутри тега <b>&lt;body&gt;</b>:</p><code class="code">&lt;h1&gt;Заголовок 1-го уровня&lt;/h1&gt;<br />&lt;h2&gt;Заголовок 2-го уровня&lt;/h2&gt;<br />&lt;h3&gt;Заголовок 3-го уровня&lt;/h3&gt;<br />&lt;h4&gt;Заголовок 4-го уровня&lt;/h4&gt;<br />&lt;h5&gt;Заголовок 5-го уровня&lt;/h5&gt;<br />&lt;h6&gt;Заголовок 6-го уровня&lt;/h6&gt;</code><p>Теги <b>&lt;h1&gt;</b>, <b>&lt;h2&gt;</b>, <b>&lt;h3&gt;</b>, <b>&lt;h4&gt;</b>, <b>&lt;h5&gt;</b>, <b>&lt;h6&gt;</b> - выводят текст в браузере. Причём этот текст является заголовком, более того, чем больше цифра (от <b>1-го</b> до <b>6-ти</b>), тем менее крупным шрифтом будет выведен соответствующий текст. Таким образом, код Вашей страницы имеет вид:</p><code class="code">&lt;html&gt;<br />&lt;head&gt;<br />&nbsp; &lt;title&gt;Наша страница&lt;/title&gt;<br />&nbsp; &lt;meta http-equiv="Content-type" content="text/html; charset=windows-1251"&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp; &lt;h1&gt;Заголовок 1-го уровня&lt;/h1&gt;<br />&nbsp; &lt;h2&gt;Заголовок 2-го уровня&lt;/h2&gt;<br />&nbsp; &lt;h3&gt;Заголовок 3-го уровня&lt;/h3&gt;<br />&nbsp; &lt;h4&gt;Заголовок 4-го уровня&lt;/h4&gt;<br />&nbsp; &lt;h5&gt;Заголовок 5-го уровня&lt;/h5&gt;<br />&nbsp; &lt;h6&gt;Заголовок 6-го уровня&lt;/h6&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code><p>Сохраните страницу и посмотрите на неё в браузере.</p><p>Также можно добавить немного атрибутов и в тег <b>&lt;body&gt;</b>. Давайте добавим атрибут <b>text</b> со значением <b>green</b> (зелёный). И атрибут <b>bgcolor</b> со значением <b>yellow</b> (жёлтый).</p><p>Таким образом, тег <b>&lt;body&gt;</b> выглядит так:</p><code class="code">&lt;body text = "green" bgcolor = "yellow"&gt;<br />&nbsp; &lt;h1&gt;Заголовок 1-го уровня&lt;/h1&gt;<br />&nbsp; &lt;h2&gt;Заголовок 2-го уровня&lt;/h2&gt;<br />&nbsp; &lt;h3&gt;Заголовок 3-го уровня&lt;/h3&gt;<br />&nbsp; &lt;h4&gt;Заголовок 4-го уровня&lt;/h4&gt;<br />&nbsp; &lt;h5&gt;Заголовок 5-го уровня&lt;/h5&gt;<br />&nbsp; &lt;h6&gt;Заголовок 6-го уровня&lt;/h6&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code><p>Сохраните страницу и посмотрите на неё в браузере. Как видите, фон страницы стал жёлтым, а текст стал зелёным.</p><p>Думаю, что на сегодня хватит для Вас материала. Очень полезно будет потренироваться в выводе разного текста, разными цветами.</p><p>Увидимся в следующей статье!</p><p>С уважением, Михаил Русаков.</p>\r\n<p><b>P.S.</b> Бесплатный курс по <b>HTML</b>: <a rel="external" href="http://srs.myrusakov.ru/html">http://srs.myrusakov.ru/html</a></p>', 1, 1, 1271865226, 'Описание процесса создания сайта на языке HTML.', 'создание сайта на html, язык html, первый сайт на html'),
(2, 'Ссылки и изображения в HTML', 'html-ssylki-i-izobrageniya.jpg', '<p>В этой статье я расскажу Вам о добавлении изображений и ссылок на Вашу <b>HTML-страницу</b>.</p><p>Я думаю, что Вы ни разу не встречали ни одной страницы в Интернете, на которой не было ни одного изображения или ссылки. Поэтому материал данной статьи весьма важен, в то же время он очень прост, благодаря чему его сможет освоить даже школьник.</p><p>Первое, что мы сделаем - это добавим ссылку на нашу страницу.</p>', '<p>В этой статье я расскажу Вам о добавлении изображений и ссылок на Вашу <b>HTML-страницу</b>.</p><p>Я думаю, что Вы ни разу не встречали ни одной страницы в Интернете, на которой не было ни одного изображения или ссылки. Поэтому материал данной статьи весьма важен, в то же время он очень прост, благодаря чему его сможет освоить даже школьник.</p><p>Первое, что мы сделаем - это добавим <b>HTML ссылку</b> на нашу страницу.</p><p>Для этого напишем в теге <b>&lt;body&gt;</b> такой код:</p><code class="code">&lt;a target = "_self" href = "index.html" title = "Ссылка"&gt;Ссылка на эту страницу&lt;/a&gt;</code><p>Тег <a title="HTML" href="http://myrusakov.ru/html.html">HTML</a> <b>&lt;a&gt;</b> означает начало ссылки. У этого тега есть различные атрибуты. Давайте начнём с "<b>target</b>".</p><p>Атрибут "<b>target</b>" может принимать три значения (их чуть больше, но они слишком редко применяются, поэтому не буду их даже упоминать): "<b>_self</b>", "<b>_new</b>", "<b>_blank</b>". Вообще говоря, результат этих атрибутов у разных браузеров зачастую происходит по-разному, поэтому я скажу, что означает каждое значение атрибута "<b>target</b>" лишь в теории, а не на практике.</p><p>Значение "<b>_self</b>" означает, что страница откроется в этом же окне.</p><p>Значение "<b>_new</b>" означает, что страница откроется в новом окне (некоторые браузеры открывают не новое окно, а создают новую вкладку в браузере).</p><p>Значение "<b>_blank</b>" означает, что страница будет открыта в новой вкладке.</p><p>Я настоятельно рекомендую Вам испробовать все значения этого атрибута в различных браузерах, чтобы окончательно понять, что каждое из них означает.</p><p>Следующий атрибут "<b>href</b>" означает путь к странице. Так как нам пока ссылаться не на что, то приходится сослаться на ту же страницу. Что касается формы записи, то здесь бывают абсолютные и относительные пути.</p><p>Абсолютный путь задаёт полный путь к файлу, например, так: "<b>http://mysite.ru/images/image1.gif</b>". А относительный путь указывают путь относительно каталога, в котором находится текущий файл. Например, наш файл "<b>index.html</b>" лежит в корне сервера, а мы пишем: "<b>href = ''images/image1.gif''</b>". Это означает то же самое, что и если бы мы написали: "<b>http://mysite.ru/images/image1.gif</b>". Это, что касается абсолютных и относительных путей.</p><p>Надеюсь, что с атрибутом "<b>href</b>" всё стало понятно. Разумеется, ссылаться можно не только на <b>HTML-страницы</b>, но и на любые файлы, будь то картинки, будь то фильмы, будь то музыка, будь то архивы, будь то ещё всё, что угодно.</p><p>Последний атрибут - это "<b>title</b>". Здесь всё совсем просто. Этот атрибут задаёт текст, который будет виден при наведении мышки на ссылку.</p><p>С атрибутами тега <b>&lt;a&gt;</b> покончено. Что касается того, что внутри тега, то здесь только Ваша фантазия. В большинстве случаев - это обычный текст, как, например, у нас. Очень часто делают картинку внутри тега <b>&lt;a&gt;</b>, тогда эта ссылка будет в виде картинки.</p><p>Тег <b>&lt;/a&gt;</b> означает конец гиперссылки.</p><p>Также можно задавать <b>цвет ссылок</b>. Опять же будет работать или нет - зависит от браузера. Но всё-таки, давайте я Вас с этим познакомлю. Добавим в тег <b>&lt;body&gt;</b> три атрибута : "<b>link</b>", "<b>vlink</b>" и "<b>alink</b>". Каждый из этих трёх атрибутов может принимать значение какого-либо цвета. Атрибут "<b>link</b>" означает цвет непосещённой ссылки. Соответственно, "<b>vlink</b>" указывает цвет посещённой ссылки. И, наконец, атрибут "<b>alink</b>" указывает цвет ссылки в момент непосредственного нажатия. Как видите, здесь тоже ничего сложного нет.</p><p>Теперь добавим изображения, но прежде, чем это делать. Сразу после добавления <b>HTML-ссылки</b> ставим тег <b>"&lt;br&gt;"</b>. Этот тег также является одиночным, и он означает переход на новую строку. Напишем в теге <b>&lt;body&gt;</b> такой код:</p><code class="code">&lt;img src = "image1.gif" alt = "Картинка" width = "100" height = "100"&gt;</code><p>Тег <b>&lt;img&gt;</b> означает, что мы хотим добавить здесь изображение. Этот тег, как видно, является одиночным, то есть у него нет закрывающего тега. Атрибуты тега также очень и очень простые.</p><p>Атрибут "<b>src</b>" указывает путь к картинке. Опять же можно указывать, как абсолютный путь, так и относительный путь, в зависимости от ситуации.</p><p>Атрибут "<b>alt</b>" указывает текст, который описывает картинку. Этот же текст будет показываться в случае, если картинка по каким-либо причинам будет не найдена, либо у пользователя в браузере отключён показ картинок. Очень желательно этот атрибут ставить, так как это помогает оптимизации сайта (впрочем, это уже раскрутка сайта, а не его создание).</p><p>Атрибуты "<b>width</b>" и "<b>height</b>" указывают ширину и высоту картинки соответственно. Если их не указывать, то картинка будет иметь такой размер, какой имеет исходник.</p><p>Советую потренироваться, выводя различные изображения, только предварительно разместите файлы картинок вместе с "<b>index.html</b>". Например, создайте в этом же каталоге папку "<b>images</b>" и размещайте туда изображения. А в атрибуте "<b>src</b>" пишите значение "images/Имя файла картинки".</p><p>Таким образом, код Вашей страницы должен быть примерно таким:</p><code class="code">&lt;html&gt;<br />&lt;head&gt;<br />&lt;/head&gt;<br />&lt;body text = "green" bgcolor = "yellow" link = "green" vlink = "red" alink = "blue"&gt;<br />&nbsp; &lt;h1&gt;Заголовок 1-го уровня&lt;/h1&gt;<br />&nbsp; &lt;a target = "_new" href = "index.html" title = "Ссылка"&gt;Ссылка на эту страницу&lt;/a&gt;<br />&nbsp; &lt;br&gt;<br />&nbsp; &lt;img src = "Водяные лилии.jpg" alt = "Картинка" width = "100" height = "100"&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;</code><p>Вот и вся наука. Как видите, ничего сложного нет, как и всё в <a title="Базовые знания по HTML" href="http://myrusakov.ru/html-osnovy.html">базовых знаниях по HTML</a> и <a href="http://myrusakov.ru/" title="Базовые знания по созданию сайта">базовых знаниях по созданию сайта</a>.</p><p>До встречи в следующей статье.</p><p>С уважением, Михаил Русаков.</p>\r\n<p><b>P.S.</b> Если Вы хотите узнать больше по <b>HTML</b>, то посмотрите мой бесплатный курс с примером создания сайта на <b>HTML</b>: <a rel="external" href="http://srs.myrusakov.ru/html">http://srs.myrusakov.ru/html</a></p>', 1, 1, 1272093191, 'Создание ссылок и изображений в HTML, тег img и тег a. Также здесь рассматриваются атрибуты этих тегов.', 'ссылки html, изображения html, добавление ссылок html, добавление изображений html'),
(3, 'Синтаксис CSS', 'css-sintaksis.jpg', '<p>В этой статье хочется затронуть тему, как создать стиль, как выглядит код и как он работает, то есть <b>синтаксис CSS</b>. Синтаксис следующий: вначале идёт селектор, потом в фигурных скобках указываются свойства и через двоеточие их значения.</p><p>Давайте рассмотрим эти правила на примере:</p>', '<p>В этой статье хочется затронуть тему, как создать стиль, как выглядит код и как он работает, то есть <b>синтаксис CSS</b>. Синтаксис следующий: вначале идёт селектор, потом в фигурных скобках указываются свойства и через двоеточие их значения.</p><p>Давайте рассмотрим эти правила на примере:</p><code class="code">h1 {<br />&nbsp; color: red;<br />&nbsp; margin-left: 200px;<br />&nbsp; font-size: 20pt;<br />}</code><p>В данном примере селектором является "<b>h1</b>", свойствами являются "<b>color</b>", "<b>margin-left</b>" и "<b>font-size</b>", а их значениями соответственно являются "<b>red</b>", "<b>200px</b>" и "<b>20pt</b>". Что это всё означает? А это означает следующее, что элемент внутри тега <b>&lt;h1&gt;</b> станет красным, с отступом слева в <b>200 пикселей</b> и размером в <b>20 пунктов</b>.</p><p>Существует огромное количество свойств и их значений, разумеется, приводить их все - это бессмысленно. Самый разумный вариант посмотреть их в справочнике, а здесь же необходимо понимать следующее, что селекторов тоже несколько. Вот их список:</p><p>1) <b>Контекстные селекторы</b>.</p><p>2) <b>Селектор ID</b>.</p><p>3) <b>Селектор CLASS</b>.</p><p>4) <b>Селекторы параметров</b>.</p><p>5) <b>Стандартный селектор</b>.</p><p>Мы с Вами рассмотрели только один стандартный селектор, когда в его качестве выступает обычный <b>HTML-тег</b> (в примере выше, этим тегом был <b>&lt;h1&gt;</b>).</p><p>Первые четыре типа селектора <a title="CSS" href="http://myrusakov.ru/css.html">CSS</a> обсудим в другой статье в <a title="CSS Основы" href="http://myrusakov.ru/css-osnovy.html">основах CSS</a>. А пятый тип давайте разберём ещё раз.</p><p>Первое, что необходимо сделать - это написать <b>HTML-тег</b> (любой из <b>HTML-стандарта</b>). Потом в фигурных скобках указать его свойства и через двоеточие значение. Уверен, что здесь всё понятно.</p><p>И, напоследок, хочется сразу разобрать тему <b>псевдоэлементов</b>. <b>Псевдоэлементы</b> нужны для настройки свойств определённого состояния элемента. Например, состояние "<i>наведение мышки</i>" на ссылку, "<i>щелчок мышки</i>" по ссылке и тому подобные вещи. Или, например, первая строка текста. И ещё много чего ещё. Опять же полный набор <b>псевдоэлементов</b> можно посмотреть в справочнике. Я же покажу, как их использовать:</p><code class="code">a:visited {<br />&nbsp; color: red;<br />}<br />a: link {<br />&nbsp; color: blue;<br />}</code><p>В данном случае, мы задали следующий стиль: посещённые ссылки (состояние "<i>ссылка уже была нажата</i>") красного цвета, а не посещённые ссылки (состояние "<i>ссылка ещё не была нажата</i>") будут синего цвета. Как видите, <b>псевдоэлементы</b> задаются через двоеточие. То есть пишется тег, у которого могут быть <b>псевдоэлементы</b>, дальше ставится двоеточие и пишется название <b>псевдоэлемента</b>. Потом, как обычно, указываются свойства и их значения. И если у данных элементов будет соответствующее <b>псевдоэлементу</b> состояние, то стили будут к нему применены.</p><p>Надеюсь, что я познакомил Вас с основами <b>синтаксиса CSS</b>. Если Вы это освоили, то можно двигаться дальше в освоении процесса <a title="Как создать сайт самостоятельно" href="http://myrusakov.ru/">самостоятельного создания сайта</a>. Кстати, насчёт справочника. Вот даю возможность <b>скачать справочник CSS в chm</b> формате. Там имеется полный набор свойств всех элементов и их возможных значений: <a title="Скачать справочник в CHM формате" href="http://files.myrusakov.ru/free/book/css-osnovy/css.chm">Скачать справочник по CSS в chm</a>.</p>', 2, 3, 1279562836, 'Статья о синтаксисе каскадных таблиц стилей - CSS.', 'синтаксис css, синтаксис языка css'),
(4, 'Как задать CSS стиль', 'css-kak-zadat-stil.jpg', '<p>Существует четыре способа задания <b>CSS</b> стиля для тегов <b>HTML</b>:</p><p>1) <b>Inline-стиль</b>.</p><p>2) <b>Внедрённый</b> стиль</p><p>3) <b>Импортированный</b> стиль.</p><p>4) <b>Стиль из файла</b>.</p><p>И в этой статье мы разберём все четыре способа.</p>', '<p>Существует четыре способа задания <b>CSS</b> стиля для тегов <b>HTML</b>.</p><p>1) <b>Inline-стиль</b>.</p><p>2) <b>Внедрённый</b> стиль</p><p>3) <b>Импортированный</b> стиль.</p><p>4) <b>Стиль из файла</b>.</p><p>И в этой статье мы разберём все четыре способа.</p><p>Для начала первый способ - это <b>inline-стиль</b>. Данный стиль указывается непосредственно в самом теге. Например:</p><code class="code">&lt;p style = "font-size: 150%; text-align: center;"&gt;текст&lt;/p&gt;</code><p>В данном случае мы задали, чтобы элемент "<i>текст</i>" будет размером в <b>150%</b> и выравнен по <b>центру</b>. Это пример <b>inline-стиля</b>.</p><p>Второй способ - это внедрённый <b>CSS стиль</b>, то есть стиль, который задаётся в голове документа, в теге <b>&lt;head&gt;</b>. Например, так:</p><code class="code">&lt;head&gt;<br />&nbsp; &lt;style&gt;<br />&nbsp;&nbsp;&nbsp; h1 {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; color: red;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; margin-top: 100px;<br />&nbsp;&nbsp;&nbsp; }<br />&nbsp; &lt;/style&gt;<br />&lt;/head&gt;</code><p>Здесь будет происходить следующее: для всех элементов внутри тега <b>&lt;h1&gt;</b> будет сделано следующее: их цвет будет красным и отступ сверху будет 100 пикселей.</p><p>Третий способ задания <b>CSS стиля</b> - это <b>импортированные стили</b>. Они также, как и <b>внедрённые</b> задаются в голове документа, но уже из файла. Вот пример:</p><code class="code">&lt;head&gt;<br />&nbsp; &lt;style&gt;<br />&nbsp;&nbsp;&nbsp; @import url("my.css");<br />&nbsp; &lt;/style&gt;<br />&lt;/head&gt;</code><p>Здесь ко всей странице будут применяться стили из файла "<i>my.css</i>".</p><p>И последние вид <b>CSS стилей</b> - это стили из файла. Данный способ является самым частым, и заключается он в подключении файла стиля через тег <b>&lt;link&gt;</b> в голове документа. Например, таким образом:</p><code class="code">&lt;head&gt;<br />&nbsp; &lt;link rel="stylesheet" type="text/css" href="my.css"&gt;<br />&lt;/head&gt;</code><p>Данный способ очень похож на предыдущий способ, но здесь не используется тег <b>&lt;style&gt;</b>, и есть ещё одно отличие. Причём, это отличие характерно для всех способов задания <b>CSS стиля</b>. И это отличие - <b>приоритет</b>.</p><p>Когда проявляется приоритет? А проявляется он при возникновении <b>конфликтных ситуаций</b>, связанных с попыткой одному и тому же элементу задать противоречивый стиль. Например, через <b>inline-стиль</b> пытаемся сделать цвет красным, а через <b>импортированный</b> стиль пытаемся сделать цвет этого элемента чёрным. Во избежание таких противоречивых ситуаций, необходимо расставить приоритеты: какой способ с самым высоким приоритетом, а какой, наоборот, с самым низким. Приоритеты в порядке возрастания следующие:</p><p>1) <b>Стиль</b> из файла.</p><p>2) <b>Импортированный стиль</b>.</p><p>3) <b>Внедрённый стиль</b>.</p><p>4) <b>Inline-стиль</b>.</p><p>Таким образом, <b>inline-стиль</b> имеет наибольший приоритет. И, пользуясь этим, можно сделать вывод, что в примере выше цвет элемента будет красным, а не чёрным.</p><p>Какие выводы можно сделать?</p><p>1) <b>Общий стиль</b> для всего сайта должен быть вынесен в отдельный файл и подключаться на каждой странице через тег <b>&lt;link&gt;</b>, ввиду того, что данный стиль является стилем с минимальным приоритетом, его в частных случаях можно будет изменить.</p><p>2) <b>Импортированный стиль</b> надо использовать, когда <b>2 и более страниц (но не все)</b> имеют определённые особенности в стиле.</p><p>3) <b>Внедрённый стиль</b> надо использовать для задания уникальных <b>CSS стилей</b> для конкретной страницы. Эти стили уникальны для каждой страницы сайта.</p><p>4) <b>Inline-стиль</b> надо использовать, когда отдельный элемент на отдельной странице требует особенного вида.</p><p>Руководствуясь данными принципами, Вы никогда не запутаетесь в <b>CSS-стилях</b>.</p><p>Напоследок, хочется привести небольшой пример, как надо следовать этим принципам. Допустим, Вы хотите по-разному выводить элемент внутри тега <b>&lt;p&gt;</b>. Перед Вам стоят такие задачи:</p><p>1) Размер шрифта на <b>всех страницах сайта</b> должен быть <b>15pt</b>, а цвет <b>чёрным</b>.</p><p>2) <b>На всех страницах, кроме одной</b>, цвет текста внутри этого элемента должен быть <b>красным</b>.</p><p>3) <b>На каждой странице, отступы будут разными</b>.</p><p>4) <b>В отдельных случаях</b> может быть <b>изменён размер и цвет текста</b>.</p><p>Я, думаю, что здесь всё прозрачно, но тем не менее, давайте поясню порядок действий:</p><p>1) В отдельный файл вынести стиль, где задаётся размер и цвет. Потом подключить данный стиль через тег <b>&lt;link&gt;</b>.</p><p>2) В отдельный файл вынести стиль, где задаётся красный цвет текста. Потом подключить его, как <b>импортированный стиль</b> к нужным страницам.</p><p>3) На каждой странице внутри тега <b>&lt;style&gt;</b> сделать разные отступы для тега <b>&lt;p&gt;</b>.</p><p>4) У нужных тегов <b>&lt;p&gt;</b> настроить должным образом размер и цвет текста.</p><p>Как видите, ничего сложного нет, а освоив это Вам будет гораздо проще <a title="Создание дизайна сайта" href="http://myrusakov.ru/css.html">создавать дизайн своего сайта</a>, который необходим при <a title="Создать свой сайт" href="http://myrusakov.ru/">создании сайтов с нуля</a>. О других <a title="CSS Основы" href="http://myrusakov.ru/css-osnovy.html">основах CSS</a> можно почитать в этой же категории.</p><p>С Уважением, <i>Михаил Русаков!</i></p><p><b>P.S.</b> Полный курс по <b>HTML, CSS и по вёрстке сайтов</b>: <a rel="external" href="http://srs.myrusakov.ru/makeup">http://srs.myrusakov.ru/makeup</a></p>', 2, 3, 1279565532, 'Статья о том, как использовать CSS стили, и как распределяются приоритеты при их использовании.', 'задание css стиля, способы задания css стиля, приоритеты css стилей');
INSERT INTO `xyz_articles` (`id`, `title`, `img`, `intro`, `full`, `section_id`, `cat_id`, `date`, `meta_desc`, `meta_key`) VALUES
(5, 'Селекторы CSS', 'css-selektory.jpg', '<p>В этой статье мы разберём различные виды селекторов. У каждого из них своя задача и каждый срабатывает лишь при соблюдении условий, и по этим условиям делятся на несколько видов:</p><p>1) <b>Обычный селектор</b>.</p><p>2) <b>Контекстный селектор</b>.</p><p>3) <b>Селектор ID</b>.</p><p>4) <b>Селектор CLASS</b>.</p><p>5) <b>Селектор параметров</b>.</p>', '<p>В этой статье мы разберём различные виды селекторов. У каждого из них своя задача и каждый срабатывает лишь при соблюдении условий, и по этим условиям делятся на несколько видов:</p><p>1) <b>Обычный селектор</b>.</p><p>2) <b>Контекстный селектор</b>.</p><p>3) <b>Селектор ID</b>.</p><p>4) <b>Селектор CLASS</b>.</p><p>5) <b>Селектор параметров</b>.</p><p>Обсуждать <b>обычный селектор</b> мы не будем, потому что, во-первых, мы его обсуждали, а, во-вторых, это обычный <b>HTML-тег</b>, поэтому тут и сказать нечего.</p><p>А теперь подробно разберём <b>контекстные селекторы</b>, так как их используют, пожалуй, чаще всего. Они нужны для того, чтобы к элементу применялся стиль при условии, что данный элемент лежит внутри тега, который лежит внутри другого тега. Звучит запутанно, не спорю, но давайте разберёмся на примере</p><code class="code">&lt;div&gt;&lt;h2&gt;Заголовок в контейнере&lt;/h2&gt;&lt;/div&gt;</code><p>Элемент, в данном случае - это текст "<i>заголовок в контейнере</i>" лежит в теге <b>&lt;h2&gt;</b>, который в свою очередь лежит в теге <b>&lt;div&gt;</b>. Этот пример поясняет то, что я написал чуть выше. А теперь вернёмся к контекстным селекторам. Синтаксис следующий:</p><code class="code">тег1 тег2 {<br />&nbsp; свойство1: значение1;<br />&nbsp; свойство2: значение2;<br />}</code><p>И работает это так: если <i>тег2</i> находится внутри <i>тега 1</i>, то элементы внутри <i>тега2</i> примут <i>свойства1</i> и <i>свойства2</i> со значениями <i>значение1</i> и <i>значение2</i>. А теперь пример <b>CSS</b> для примера выше.</p><code class="code">div h2 {<br />&nbsp; font-weight: bold;<br />}</code><p>Такой стиль будет применён к примеру выше и "<i>заголовок в контейнере</i>" станет жирным. А если будет написано просто:</p><code class="code">&lt;h2&gt;Заголовок&lt;/h2&gt;</code><p>То стиль применён к этому элементу не будет, ведь он не находится внутри тега <b>&lt;div&gt;</b>.</p><p>Вопрос: для чего же нужны <b>контекстные селекторы</b>? Их Вы будете вынуждены использовать многократно, ввиду того, что на Вашей странице наверняка будет множество повторяющихся тегов (<b>&lt;div&gt;</b>, <b>&lt;p&gt;</b>, <b>&lt;tr&gt;</b>, <b>&lt;td&gt;</b>, <b>&lt;table&gt;</b> и прочие), и, разумеется, Вы захотите, чтобы у них был далеко не всегда одинаковый внешний вид. И вот тут и придут на помощь <b>контекстные селекторы</b>.</p><p><b>Селекторы ID</b> тоже очень распространены. Они позволяют задать уникальный элемент на странице, и синтаксис объявления этого селектора следующий:</p><code class="code">имятега#имя {<br />&nbsp; свойство1: значение1;<br />&nbsp; свойство2: значение2;<br />}</code><p>Теперь если тегу "<i>имятега</i>" имеет атрибут "<i>id</i>" со значением "<i>имя</i>", то к элементам внутри тега "<i>имятега</i>" будет применён стиль.</p><p>Если "<i>имятега</i>" отсутствует (то есть селектор начинается с символа "#"), то тогда данный стиль может быть применён к любым тегам, у которых стоит атрибут "<i>id</i>" в значении "<i>имя</i>".</p><p>А теперь пример:</p><code class="code">#red {<br />&nbsp; color: red;<br />}</code><p>И теперь <b>HTML-код</b>, к которому будет применён данный стиль:</p><code class="code">&lt;p id = "red"&gt;Красный текст&lt;/p&gt;</code><p>Как видите, всё очень просто, однако есть одно большое <b>НО!</b> Используйте <b>ОДИН идентификатор только ОДИН РАЗ на странице!</b> Например, вот так писать нельзя:</p><code class="code">&lt;p id = "red"&gt;Красный текст&lt;/p&gt;<br />&lt;p id = "red"&gt;Ещё один красный текст&lt;/p&gt;</code><p>В таких случаях надо создавать два идентификатора вот так:</p><code class="code">#red1, #red2 {<br />&nbsp; color: red;<br />}</code><p>И <b>HTML-код</b>:</p><code class="code">&lt;p id = "red1"&gt;Красный текст&lt;/p&gt;<br />&lt;p id = "red2"&gt;Ещё один красный текст&lt;/p&gt;</code><p>Вот теперь будет правильно. Кстати, обратите внимание на "запятую" в описании селектора. Это частый приём для сокращения количества строк в стиле. Если у Вас два или более элемента имеют один и тот же стиль, то Вы можете через запятую перечислить все селекторы, а потом сразу для всех написать соответствующий стиль, как в примере выше.</p><p>Теперь о <b>селекторе CLASS</b>. Он очень похож на <b>селектор ID</b>, но его "имя" может использоваться несколько раз на странице. Общий синтаксис этого селектора следующий:</p><code class="code">имятега.имя {<br />&nbsp; свойство1: значение1;<br />&nbsp; свойство2: значение2;<br />}</code><p>Таким образом, если у тега "<i>имятега</i>" стоит атрибут "<i>class</i>" со значением "<i>имя</i>", то к элементам внутри будет применён данный стиль.</p><p>Аналогично, с <b>селектором ID</b>, если "<i>имятега</i>" не задано (то есть описание селектора начинается с символа "."), то данный стиль может быть присвоен любым элементам.</p><p>А теперь пример:</p><code class="code">.red {<br />&nbsp; color: red;<br />}</code><p>И <b>HTML-код</b> под этот стиль:</p><code class="code">&lt;p class = "red"&gt;Красный текст&lt;/p&gt;<br />&lt;p class = "red"&gt;Ещё один красный текст&lt;/p&gt;</code><p>Вновь всё очень просто. Теперь встаёт вопрос: чем же тогда лучше <b>селектор ID</b>? А лучше он тем, что к данным элементам очень удобное обращение через, например, <b>JavaScript</b>. Поэтому очень удобно задать именно <b>ID</b>, при условии, что такой элемент всего один на странице, то есть он является уникальным.</p><p>И последний тип <b>селекторов CSS</b> - это <b>селектор параметров</b>. Не очень часто используют, но в некоторых случаях он является практически незаменимым. Я, надеюсь, что Вы заметили, что вид многих тегов зависит от их атрибутов. Ярким примеров является тег <b>&lt;input&gt;</b>, который может быть и кнопкой, и переключателем, и текстовым полем. Согласитесь, что выглядят все эти элементы совершенно по-разному, однако, отвечает за них один и тот же тег. И для того, чтобы применять стиль лишь при определённом значении какого-либо атрибута, и используют селекторы параметров. Синтаксис следующий</p><code class="code">имятега[имяатрибута="значениеатрибута"] {<br />&nbsp; свойство1: значение1;<br />&nbsp; свойство2: значение2;<br />}</code><p>Применяется данный стиль в следующем случае: если в теге "имятега" значение "имяатрубита" равно "значениеатрибута" то будет применён стиль, в противном случае стиль не применяется.</p><p>Чтобы стало ещё понятнее, привожу пример:</p><code class="code">input[type="submit"] {<br />&nbsp; border: 2px double black;<br />}</code><p>И <b>HTML</b>:</p><code class="code">&lt;input type = "submit" value = "Кнопка с двойной чёрной рамкой"&gt;<br />&lt;input type = "button" value = "Другая кнопка"&gt;</code><p>Надеюсь, что и здесь всё прозрачно. Ещё один очень важный момент, виды <b>селекторов</b> можно совмещать, например, данный <b>CSS</b> вполне нормальный и рабочий:</p><code class="code">#header li a {<br />&nbsp; font-size: 150%;<br />}</code><p>И <b>HTML-код</b>, который вызовет этот стиль:</p><code class="code">&lt;ul id = "header"&gt;<br />&nbsp; &lt;li&gt;<br />&nbsp;&nbsp;&nbsp; &lt;a href = "http://myrusakov.ru"&gt;Текст с размером 150%&lt;/a&gt;<br />&nbsp; &lt;/li&gt;<br />&lt;/ul&gt;</code><p>Думаю, что и здесь вопросов не возникнет.</p><p>Напоследок хочется сказать, что <b>селекторы</b> - это <a title="Основы CSS" href="http://myrusakov.ru/css-osnovy.html">основа CSS</a>, которую обязан знать любой, кто <a title="Как создать сайт с нуля" href="http://myrusakov.ru/">создаёт сайты с нуля</a>. А как применять эти <b>селекторы</b> - это уже зависит только от Ваших дизайнерских навыков.</p>', 2, 3, 1279730696, 'Типы селекторов CSS: контекстный селектор, селектор ID, селектор CLASS, селектор параметров.', 'селекторы css, виды селекторов css, контекстные селекторы, селектор id, селектор class, селектор параметров'),
(6, 'Вышел Видеокурс "Создание и раскрутка сайта от А до Я"', 'srs.jpg', '<p>Сегодня поступил в продажу мой видеокурс "<b>Создание и раскрутка сайта от А до Я</b>", состоящий из <b>246 видеоуроков</b> общей продолжительностью <b>более 50-ти часов</b>. Больше года напряжённой работы не прошли даром, и я представляю Вашему вниманию то, что входит в этот видеокурс:</p>', '<p>Сегодня поступил в продажу мой видеокурс "<b>Создание и раскрутка сайта от А до Я</b>", состоящий из <b>246 видеоуроков</b> общей продолжительностью <b>более 50-ти часов</b>. Больше года напряжённой работы не прошли даром, и я представляю Вашему вниманию то, что входит в этот видеокурс:</p>\r\n	<ol>\r\n		<li>\r\n			<b>HTML</b>\r\n		</li>\r\n		<li>\r\n			<b>CSS</b>\r\n		</li>\r\n		<li>\r\n			<b>JavaScrpit</b>\r\n		</li>\r\n		<li>\r\n			<b>PHP</b>\r\n		</li>\r\n		<li>\r\n			<b>MySQL</b>\r\n		</li>\r\n		<li>\r\n			<b>XML</b>\r\n		</li>\r\n		<li>\r\n			<b>Joomla</b>\r\n		</li>\r\n		<li>Создание на Ваших глазах абсолютно с нуля сайта <b>MyRusakov.ru</b>, на котором Вы сейчас и находитесь.</li>\r\n		<li>Размещение сайта <b>MyRusakov.ru</b> в Интернете.</li>\r\n		<li>Раскрутка сайта <b>MyRusakov.ru</b> абсолютно с нуля и также прямо на Ваших глазах.</li>\r\n		<li>4 Бонуса</li>\r\n	</ol>\r\n	<p>Более подробно о видеокурсе, а также о том, как его можно приобрести, Вы можете узнать здесь: <a rel = "external" href = "http://srs.myrusakov.ru" title = "Создание и раскрутка сайта от А до Я">Создание и раскрутка сайта от А до Я</a></p>\r\n	<p>Также Вы можете поучаствовать в партнёрской программе, и <b>получать приличные комисионные с каждой продажи</b>. Подробности здесь: <a rel = "external" href = "http://srs.myrusakov.ru/partner/" title = "Партнёрская программа">Партнёрская программа</a></p>\r\n	<p>Разумеется, участникам партнёрской программы предоставляются рекламные материалы.</p>\r\n	<p>Надеюсь, что Вам понравится мой видеокурс!</p>\r\n	<p>\r\n		<i>С Уважением, Михаил Русаков!</i>\r\n	</p>', NULL, NULL, 1293735498, 'Описание видокурса Создание и раскрутка сайта от А до Я, состоящего из 246 видеоуроков общей продолжительностью более 50-ти часов', 'видеокурс создание раскрутка сайта от а до я, что входит в видеокурс создание и раскрутка сайта от а до я');

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_categories`
--

CREATE TABLE IF NOT EXISTS `xyz_categories` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `img` varchar(255) NOT NULL,
  `section_id` int(10) unsigned NOT NULL,
  `description` text NOT NULL,
  `meta_desc` varchar(255) NOT NULL,
  `meta_key` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

--
-- Дамп данных таблицы `xyz_categories`
--

INSERT INTO `xyz_categories` (`id`, `title`, `img`, `section_id`, `description`, `meta_desc`, `meta_key`) VALUES
(1, 'HTML Основы', 'html-osnovy.jpg', 1, '<p>В данной категории Вы сможете познакомиться с множеством <b>тегов HTML</b>. Вы убедитесь, что <b>HTML - это просто!</b></p><p>В ниже приведённых статьях имеется вся информация, которая нужна по этому языку разметки.</p><p>Ознакомившись с данными материалы, Вы сможете сразу начать <b>создавать свой сайт</b> и начать зарабатывать на нём!</p><h3>Прочитав статьи по основам HTML, Вы узнаете:</h3><p>1) О структуре <b>HTML-документа</b>.</p><p>2) Как добавлять ссылки на <b>HTML-страницы</b>.</p><p>3) Как добавлять изображения на <b>HTML-страницы</b>.</p><p>4) О способах изменения внешнего вида текста в <b>HTML</b>.</p><p>5) Как добавлять списки на <b>HTML-страницы</b>.</p><p>6) О способах выравнивания элементов в <b>HTML</b>.</p><p>7) Как создавать формы в <b>HTML</b>.</p><p>8) Как создавать таблицы в <b>HTML</b>.</p><p>9) Как выбрать цвет в <b>HTML</b>.</p><p>10) Как установить Favicon на сайт.</p><p>11) Как вставить дополнительные пробелы в <b>HTML</b>.</p><p>12) Как установить страницу 404.</p><p>13) Как сделать <b>редирект</b> на <b>HTML</b>.</p><p>14) Как вывести спецсимволы в <b>HTML</b>.</p><p>15)  Зачем нужен <b>DOCTYPE</b>.</p><p>16) Какая разница между <b>HTML</b> и <b>XHTML</b>.</p><p>17)  Как добавить видео на сайт.</p><p>18) О проверке сайта в разных браузерах.</p><p>19) О значение валидного <b>HTML-кода</b>.</p><p>20) Как проверить статус <b>ICQ</b> через <b>HTML</b>.</p><p>21) Что такое мета-теги в <b>HTML</b>.</p><p>22) Какие имеются мета-теги для страницы в <b>HTML</b>.</p><p>23) Какие имеются мета-теги для браузера в <b>HTML</b>.</p><p>24) Какие имеются мета-теги для поисковых систем в <b>HTML</b>.</p><p>25) Что такое кодировка.</p><p>26) Что лучше: блочная вёрстка или табличная.</p><p>27) Что делать, если <b>HTML-файл</b> открывается как <b>TXT</b>.</p><p>28) Как вставить аудио на сайт.</p><p>29) Почему <b>Dreamweaver</b> - это плохо.</p><p>30) Как сделать дизайн для сайта.</p><p>31) Что такое вёрстка.</p><p>32) Что такое сайт под ключ.</p><p>33) Как поставить горячую клавишу на ссылку.</p><p>34) Как сделать кпопку "Наверх".</p><p>35) Об использовании тега <b>optgroup</b> в <b>HTML</b>.</p><p>36) Почему не отображается картинка на сайте.</p><p>37) Почему фреймы - это плохо.</p><p>38) Стоит ли использовать <b>Flash</b> при создании сайта?</p><p>39) Какова структура блочной вёрстки?</p><p>40) Как открыть ссылку в новом окне с валидным кодом?</p><p>41) Как запретить посетителю сохранять картинки?</p><p>42) Как запретить посетителю копировать текст?</p><p>43) Стоит ли делать вёрстку под старые браузеры.</p><p>44) Как сделать мобильную версию сайта.</p><p>45) Как поменять кодировку на сайте.</p><p>46) Как сделать автообновление страницы.</p><p>47) Как сделать комментирование на <b>HTML-сайте</b>.</p><p>48) Как проверить сайт в разных версиях <b>IE</b>.</p><p>49) Как установить радио на сайт.</p><p>50) Какая структура у двухколоночного сайта.</p><h3 style="text-align: center;">Все материалы по основам HTML</h3>', 'Множество статей по основам HTML. Рассматриваются теги HTML, множество примеров их использования.', 'html основы, сайт html, создание сайта на html'),
(2, 'HTML 5', 'html-5.jpg', 1, '<p>В данной категории Вы сможете познакомиться с новым стандартом <b>HTML</b> - <b>HTML 5</b>, который не так давно появился в нашей жизни, и ещё очень многие про него ничего не знают, либо просто слышали. И данная категория позволит восполнить этот пробел в знаниях, ведь <b>HTML 5</b> - это будущее Интернета, к которому надо быть готовым любому Web-мастеру.</p><p>В статьях этой категории содержится множество нововведений в <b>HTML 5</b>, которые необычайно важны и которые обязательно надо знать. Подробно расписаны новые элементы, а также подробно расписано их назначение.</p><h3>Прочитав статьи по HTML 5, Вы узнаете:</h3><p>1) Что нового появилось в <b>HTML 5</b>.</p><p>2) Какие элементы появились для создания структуры <b>HTML-документа</b>.</p><p>3) Какие появились новые блочные элементы в <b>HTML 5</b>.</p><p>4) Какие новые теги появились в <b>HTML 5</b> для форматирования текста.</p><p>5) Какие элементы появились для работы с мультимедиа в <b>HTML 5</b>.</p><p>6) Какие <b>HTML-теги</b> появились для интерактивной работы с документом.</p><p>7) Почему не работает <b>HTML5</b>.</p><p>8) Об атрибуте <b>download</b> в <b>HTML5</b>.</p><p>9) Нужно ли сейчас использовать <b>HTML5</b> и <b>CSS3</b>.</p><p>10) Новые атрибуты для полей форм, появившиеся в <b>HTML5</b>.</p><p>11) Какие <b>новые значения атрибута type</b> появились в <b>HTML5</b>.</p><p>12) Зачем нужен атрибут <b>data-*</b> в <b>HTML5</b>.</p><p>13) Что такое <b>canvas</b> в <b>HTML5</b>.</p>\r\n<h3 style="text-align: center;">Все материалы по HTML 5</h3>', 'Статьи по HTML 5 - новому стандарту самого популярного языка разметки.', 'html 5, html 5 нововведения, html 5 новые теги'),
(3, 'CSS Основы', 'css-osnovy.jpg', 2, '<p>Технология <b>CSS</b> используется в первую очередь дизайнерами, ведь именно они создают дизайн сайта. Однако, ошибочно полагать, что Web-мастерам <b>CSS</b> знать не обязательно. Достаточно вспомнить хотя бы пример из описания раздела по <a title="CSS" href="http://myrusakov.ru/css.html">CSS</a>. Помимо мобильности своего сайта, таблицы стилей позволяют создавать различные классические дизайнерские решения (например, выпадающее меню). А вместе с <a title="JavaScript" href="http://myrusakov.ru/javascript.html">JavaScript</a> позволяют создавать динамические <b>HTML-страницы</b> (<i>DHTML</i>), красота и удобство которых, порой, просто поражают.</p><p>Разумеется, для того, чтобы создавать подобные вещи необходимо познакомиться с <b>основами CSS</b>. И данная категория сайта поможет Вам это сделать максимально быстро и эффективно.</p><p>Полный курс по <b>HTML, CSS и по вёрстке сайтов</b>: <a rel="external" href="http://srs.myrusakov.ru/makeup">http://srs.myrusakov.ru/makeup</a></p><h3>Прочитав статьи по основам CSS, Вы узнаете:</h3><p>1) Синтаксис <b>CSS</b>.</p><p>2) Способы и их приоритеты задания <b>CSS-стиля</b>.</p><p>3) Типы селекторов в <b>CSS</b>.</p><p>4) <b>CSS</b> хаки для браузеров.</p><p>5) Правила написания <b>CSS</b>.</p><p>6) Как создать всплывающую подсказку на <b>CSS</b>.</p><p>7) Как изменить внешний вид первой буквы через <b>CSS</b>.</p><p>8) Как задать вид курсора через <b>CSS</b>.</p><p>9) Как изменить вид курсора при наведении мыши с помощью <b>CSS</b>.</p><p>10) Как сделать подменю на <b>CSS</b>.</p><p>11) О замене свойства <b>min-width</b> в <b>IE6</b>.</p><p>12) О валидности <b>CSS</b>.</p><p>13) Как задать цвет посещённых ссылок.</p><p>14) Как задать отступ абзаца через <b>CSS</b>.</p><p>15) Как сделать закруглённые углы через <b>CSS</b>.</p><p>16) Как вместо маркера списка поставить своё изображение через <b>CSS</b>.</p><p>17) Как сделать фон картинкой.</p><p>18) Как сделать затемнение фона на <b>CSS</b>.</p><p>19) Что такое дочерние селекторы в <b>CSS</b>.</p><p>20) Какие единицы измерения имеются в <b>CSS</b>.</p><p>21) Как сделать всплывающее окно с затемнением.</p><p>22) Как сделать анимированный фон.</p><p>23) Как сделать красивое текстовое поле.</p><p>24) Как менять изображение при наведении на него курсора мыши.</p><p>25) Что такое псевдоэлементы в <b>CSS</b>.</p><p>26) Что такое <b>CSS спрайты</b>.</p><p>27) Как прижать футер (подвал) к низу через <b>CSS</b>.</p><p>28) Как запретить изменение размеров <b>textarea</b> через <b>CSS</b>.</p><p>29) Как нарисовать треугольник через <b>CSS</b>.</p><p>30) Как обработать событие <b>click</b> через <b>CSS</b>.</p><p>31) Как задать свой курсор через <b>CSS</b>.</p><p>32) Как сделать горизонтальное выпадающее меню на <b>CSS</b>.</p><p>33) Как использовать нестандартный шрифт на сайте.</p><p>34) Как изменить фон у радиокнопки через <b>CSS</b>.</p><p>35) Можно ли использовать <b>CSS3</b>.</p><p>36) Как сделать тень на <b>CSS</b>.</p><p>37) Как задать атрибуты <b>cellpadding</b> и <b>cellspacing</b> на <b>CSS</b>.</p><p>38) Как сделать <b>div со 100% height</b>.</p><p>39) О совместимости <b>z-index</b> и плеера <b>Youtube</b>.</p><p>40) Почему плохо использовать <b>-moz</b>, <b>-ms</b>, <b>-webkit</b> и прочие свойства.</p><p>41) Стоит ли использовать <b>CSS Reset</b>.</p><p>42) Как вертикально выравнять маркер списка.</p><p>43) Как сделать версию для печати.</p><p>44) Как сделать кроссбраузерную прозрачность на <b>CSS</b>.</p><p>45) Что такое <b>clearfix</b>.</p><p>46) Как частично отменить <b>float</b>.</p><p>47) Как сделать двухколоночную вёрстку с одинаковой высотой колонок.</p><p>48) Что такое адаптивная вёрстка.</p><p>49) Что такое медиа-запросы в <b>CSS</b>.</p><h3 style="text-align: center;">Все материалы по основам CSS</h3>', 'Материалы по основам CSS - каскадным таблицам стилей. Рассматриваются селекторы CSS и хаки для браузеров.', 'css, dhtml, селекторы css, хаки для браузеров');

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_comments`
--

CREATE TABLE IF NOT EXISTS `xyz_comments` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `article_id` int(10) unsigned NOT NULL,
  `user_id` int(10) unsigned NOT NULL,
  `parent_id` int(10) unsigned DEFAULT NULL,
  `text` text NOT NULL,
  `date` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=21 ;

--
-- Дамп данных таблицы `xyz_comments`
--

INSERT INTO `xyz_comments` (`id`, `article_id`, `user_id`, `parent_id`, `text`, `date`) VALUES
(1, 1, 1, NULL, 'Спасибо!', 1399120080),
(2, 1, 2, 1, 'Согласен!', 1399120109),
(3, 1, 1, 2, 'Спасибо за согласие!', 1399120137),
(4, 1, 1, NULL, 'Да, здорово!', 1399120161);

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_courses`
--

CREATE TABLE IF NOT EXISTS `xyz_courses` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `type` tinyint(1) unsigned NOT NULL,
  `header` varchar(100) NOT NULL,
  `sub_header` varchar(100) NOT NULL,
  `img` varchar(255) NOT NULL,
  `link` varchar(255) NOT NULL,
  `text` text NOT NULL,
  `did` int(10) unsigned DEFAULT NULL,
  `latest` tinyint(1) unsigned NOT NULL,
  `section_ids` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=13 ;

--
-- Дамп данных таблицы `xyz_courses`
--

INSERT INTO `xyz_courses` (`id`, `type`, `header`, `sub_header`, `img`, `link`, `text`, `did`, `latest`, `section_ids`) VALUES
(1, 1, 'Мой Видеокурс', 'Создание и раскрутка сайта от А до Я', 'kurs-cover.png', 'http://srs.myrusakov.ru/kurs?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=SRS-MyRusakov', '<p>Видеокурс "<b>Создание и Раскрутка сайта от А до Я</b>" - это 246 видеоуроков общей продолжительностью более 50-ти часов по теме создания, размещения в Интернете и раскрутке сайта.</p> <p>В уроке рассмотрены следующие необходимые любому <b>профессиональному Web-мастеру</b> языки: <b>HTML</b>, <b>CSS</b>, <b>JavaScript</b>, <b>PHP</b>, <b>SQL</b> (с использованием <b>MySQL</b>) и <b>XML</b>.</p> <p>Помимо этого в Видеокурсе рассматривается самая популярная система управления контентом - <b>Joomla</b>.</p> <p>Также в Видеокурсе "<b>Создание и Раскрутка сайта от А до Я</b>" показывается весь процесс создания реального сайта - <b>MyRusakov.ru</b>. Затем демонстрируется его размещение в Интернете, а также последующая раскрутка. Всё это записывается, и Вам остаётся лишь просто повторить, чтобы стать владельцем своего собственного сайта!</p> <p>И, наконец, почти к каждому уроку идут упражнения, которые позволяют закрепить полученные знания из урока уже на практике.</p>', NULL, 0, '6,8,9'),
(2, 1, ' Мой Видеокурс', 'Вёрстка сайта с нуля', 'makeup-cover.png', 'http://srs.myrusakov.ru/makeup?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=MakeUp-MyRusakov', '<p>Видеокурс "<b>Вёрстка сайта с нуля</b>" - это уникальная информация по созданию страниц любой сложности.</p>\n<p>Пройдя данный курс, Вы сможете не только верстать страницы с любым по сложности дизайном, но и выводить на чистую воду недобросовестных верстальщиков, которых в Рунете около <b>95% (!!!)</b>. Поэтому данную информацию <b>надо знать всем: кто создаёт сам и кто заказывает их на стороне</b>.</p>\n<p>Также вёрстка страниц - это очень прибыльное дело. Заработок верстальщиков составляет <b>от 100 рублей в час у новичков до 1500 рублей в час уже у профи</b>, которым Вы станете после просмотра курса и практики.</p>\n<p>Также в Видеокурсе "<b>Вёрстка сайта с нуля</b>" рассказывается о том, <b>как искать заказчиков, где их искать, как им писать в первый раз</b>. Всё это я подробно рассказываю в курсе, а также <b>даю уже готовый вариант первого обращения к заказчику</b>. С таким обращением <b>вероятность того, что заказчик к Вам обратится, близка к 100%</b>. А учитывая, что Вы будете профессионалом, то этот заказчик превратится в постоянного!</p>\n<p>Весь курс соткан из <b>практических примеров реальной вёрстки</b>. А также почти к каждому уроку идут <b>упражнения для закрепления материала</b>, поэтому в отличном результате можете быть уверены!</p>', NULL, 0, '1,2'),
(3, 1, 'Мой Видеокурс', 'PHP и MySQL с Нуля до Гуру', 'php-cover.png', 'http://srs.myrusakov.ru/php?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=PHP-MyRusakov', '<p>Видеокурс "<b>PHP и MySQL с Нуля до Гуру</b>" - это <b>более 20-ти часов видеоуроков</b> по изучению <b>PHP и MySQL</b> с точки зрения создания сайтов.</p>\n<p>Ключевой момент курса - это <b>создание движка для сайта с нуля</b>. Никакого готового кода, никаких готовых скриптов, а только всё с нуля и прямо на Ваших глазах. Каждая строчка комментируется. Но, главное, <b>я рассказываю о своём подходе при создании движков</b>. Этот подход универсален и оптимален для сайтов любой функциональности: будь то социальная сеть или будь то поисковая система. <b>Данный подход является лишь моими многолетними наработками</b>, и именно с его помощью я создаю абсолютно все свои сайты. <b>Я нигде и никогда не публиковал его, и он достанется только Вам уже готовеньким и отполированным</b>.</p>\n<p>Поскольку программирование - это прежде всего практика, то я практически для каждого урока сделал упражнения. Причём данные <b>упражнения направлены не только на закрепление материала, но и на реализацию реальных задач, встающих перед Web-разработчиками</b> при создании сайтов.</p>\n<p>Исходя из вышесказанного, просмотрев курс и выполнив упражнения, <b>Вы сможете без проблем создавать функциональные движки для самых различных сайтов</b>.</p>', NULL, 0, '4,5'),
(4, 1, 'Мой Видеокурс', 'Создание Интернет-магазина на PHP и MySQL', 'im-cover.png', 'http://srs.myrusakov.ru/im?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=IM-MyRusakov', '<p>Видеокурс "<b>Создание Интернет-магазина на PHP и MySQL</b>" - это уникальный курс по созданию Интернет-магазина с нуля. Особенностью данного курса является то, что создание идёт с самого начала, то есть от идеи. Далее создаётся <b>дизайн</b> всех необходимых страниц, после делается их <b>вёрстка</b>. Затем создаётся <b>движок на PHP и MySQL</b>, после делается <b>Admin-панель</b> и, наконец, готовый сайт <b>размещается в Интернете</b>.</p>\n<p>Адрес созданного в этом курсе сайта: <a rel="external" href="http://storedvd.ru">http://storedvd.ru</a></p>\n<p>Всё создание сайта будет происходить на Ваших глазах, поэтому Вы легко сможете повторить весь процесс создания сложного функционального сайта уже при разработке своего портала.</p>', NULL, 0, '1,2,4,5'),
(5, 1, 'Мой Видеокурс', 'JavaScript, jQuery и Ajax с Нуля до Гуру', 'javascript-cover.png', 'http://srs.myrusakov.ru/javascript?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=JavaScript-MyRusakov', '<p>Видеокурс "<b>JavaScript, jQuery и Ajax с Нуля до Гуру</b>" научит Вас "вдыхать жизнь" в страницы, делая их с потрясающими эффектами и максимальным удобством для пользователя.</p>\n<p>Курс <b>научит Вас писать скрипты на JavaScript</b>, а также обучит использованию библиотеки <b>jQuery</b> и технологии <b>Ajax</b>.</p><p>Практически любой красивый сайт (с красивыми галереями изображений, слайдерами, плавными переходами и так далее) использует <b>jQuery</b>. А практически на любом серьёзном сайте вовсю используется технология <b>Ajax</b>, которая делает работу с сайтом максимальной удобной.</p>\n<p>Поэтому курс "<b>JavaScript, jQuery и Ajax с Нуля до Гуру</b>" Вам просто необходим, если Вы хотите <b>создавать по-настоящему достойные сайты</b>.</p>', NULL, 0, '3'),
(6, 2, ' Видеокурс по HTML', 'Бесплатный Видеокурс по основам HTML', 'html-cover.png', 'http://srs.myrusakov.ru/html?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=FreeSRS-MyRusakov', '<p><b>Особенности Видеокурса:</b></p><p>- 11 видеоуроков</p><p>- Более 2-х часов видео</p><p>- Создание реального сайта</p>', 78816, 0, '1'),
(7, 2, 'Мини-курс по вёрстке сайтов', 'Бесплатный мини-курс по вёрстке страниц', 'freemakeup-cover.png', 'http://srs.myrusakov.ru/freemakeup?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=FreeMakeup-MyRusakov', '<p><b>Особенности курса:</b></p><p>- Пример табличной вёрстки</p><p>- Пример блочной вёрстки</p><p>- Вёрстка реального PSD-макета</p>', 330726, 0, '1,2'),
(8, 2, 'Видеокурс по PHP', 'Бесплатный Видеокурс по основам PHP', 'freephp-cover.png', 'http://srs.myrusakov.ru/freephp?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=FreePHP-MyRusakov', '<p><b>Особенности Видеокурса:</b></p><p>- Создание реального PHP-сайта</p><p>- Регистрация и авторизация</p><p>- Гостевая книга</p><p>- Поиск по сайту</p>', 208686, 0, '4,5'),
(9, 2, 'Бесплатный курс', 'Бесплатный курс по созданию Интернет-магазина с нуля', 'freeim-cover.png', 'http://srs.myrusakov.ru/freeim?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=FreeIM-MyRusakov', '<p><b>Из этого курса Вы узнаете:</b></p><p>- Как сделать дизайн для сайта</p><p>- Как сделать вёрстку страниц</p><p>- Как создаётся движок</p><p>- Как сделать Admin-панель</p><p>- Как размещается сайт в Интернете</p>', 314730, 0, '1,2,4,5'),
(10, 3, 'Бесплатный онлайн-семинар', '5 шагов и профессиональный сайт готов', '5steps.png', 'http://5steps-site.ru/?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=5steps-MyRusakov', '<p><b>После семинара:</b></p><p>- Вы будете иметь чёткий план действий.</p><p>- Вы сможете начать создавать сайт.</p><p>- Вы сможете легко ориентироваться в информации по созданию сайтов.</p>', NULL, 0, '1'),
(11, 3, 'Бесплатный онлайн-семинар', 'Как создать профессиональный Интернет-магазин', 'create-im.png', 'http://create-im.ru/?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=CreateIM-MyRusakov', '<p><b>После семинара:</b></p><p>- Вы будете знать, как создать Интернет-магазин.</p><p>- Вы получите бесплатный подарок с подробным описанием каждого шага.</p><p>- Вы сможете уже приступить к созданию Интернет-магазина.</p>', NULL, 0, '1,2,3,4,5'),
(12, 2, 'Новинка!', 'Бесплатный курс по JavaScript, jQuery и Ajax', 'freejs-cover.png', 'http://srs.myrusakov.ru/freejs?utm_source=MyRusakov.ru&amp;utm_medium=Banner&amp;utm_campaign=FreeJS-MyRusakov', '<p><b>Из этого курса:</b></p>\r\n<p>- Вы узнаете синтаксис JavaScript</p>\r\n<p>- Вы узнаете базовые вещи по JavaScript</p>\r\n<p>- Вы увидите примеры использования JavaScript</p>\r\n<p>- Вы увидите пример использования jQuery</p>\r\n<p>- Вы узнаете, что такое Ajax, а также увидите пример из практики</p>', 379930, 1, '3');

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_menu`
--

CREATE TABLE IF NOT EXISTS `xyz_menu` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `type` int(11) NOT NULL,
  `title` varchar(100) NOT NULL,
  `link` varchar(255) NOT NULL,
  `parent_id` int(10) unsigned DEFAULT NULL,
  `external` tinyint(1) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=10 ;

--
-- Дамп данных таблицы `xyz_menu`
--

INSERT INTO `xyz_menu` (`id`, `type`, `title`, `link`, `parent_id`, `external`) VALUES
(1, 1, 'Главная', '/', NULL, 0),
(2, 1, 'HTML', '/html.html', NULL, 0),
(3, 1, 'CSS', '/css.html', NULL, 0),
(4, 1, 'HTML Основы', '/html-osnovy.html', 2, 0),
(5, 1, 'HTML 5', '/html-5.html', 2, 0),
(6, 1, 'CSS Основы', '/css-osnovy.html', 3, 0),
(7, 2, 'Главная', '/', NULL, 0),
(8, 2, 'Служба поддержки', 'http://support.myrusakov.ru', NULL, 1),
(9, 2, 'Мой Блог', 'http://blog.myrusakov.ru', NULL, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_polls`
--

CREATE TABLE IF NOT EXISTS `xyz_polls` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `state` tinyint(1) unsigned NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Дамп данных таблицы `xyz_polls`
--

INSERT INTO `xyz_polls` (`id`, `title`, `state`) VALUES
(1, 'Что Вас интересует больше?', 0),
(2, 'Посоветуйте тему для будущего видеокурса', 1);

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_poll_data`
--

CREATE TABLE IF NOT EXISTS `xyz_poll_data` (
  `id` int(10) unsigned NOT NULL,
  `poll_id` int(10) unsigned NOT NULL,
  `title` varchar(100) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `xyz_poll_data`
--

INSERT INTO `xyz_poll_data` (`id`, `poll_id`, `title`) VALUES
(1, 1, 'HTML'),
(2, 1, 'CSS'),
(3, 1, 'JavaScript'),
(4, 1, 'PHP'),
(5, 1, 'MySQL'),
(6, 1, 'XML'),
(7, 1, 'Joomla'),
(8, 1, 'Раскрутка сайта'),
(9, 2, 'JQuery+Ajax'),
(10, 2, 'Создание мощного движка с нуля (как на этом сайте)'),
(11, 2, 'PHP+MySQL (С нуля до профи)');

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_poll_voters`
--

CREATE TABLE IF NOT EXISTS `xyz_poll_voters` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `poll_data_id` int(10) unsigned NOT NULL,
  `ip` bigint(20) NOT NULL,
  `date` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Дамп данных таблицы `xyz_poll_voters`
--

INSERT INTO `xyz_poll_voters` (`id`, `poll_data_id`, `ip`, `date`) VALUES
(1, 11, 2130706433, 1399838478);

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_quotes`
--

CREATE TABLE IF NOT EXISTS `xyz_quotes` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `author` varchar(100) NOT NULL,
  `text` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

--
-- Дамп данных таблицы `xyz_quotes`
--

INSERT INTO `xyz_quotes` (`id`, `author`, `text`) VALUES
(1, 'Альберт Эйнштейн', 'Жизнь — как вождение велосипеда. Чтобы сохранить равновесие, ты должен двигаться.'),
(2, 'Альберт Эйнштейн', 'Бессмысленно продолжать делать то же самое и ждать других результатов.'),
(3, 'Альберт Эйнштейн', 'Ты никогда не решишь проблему, если будешь думать так же, как те, кто ее создал.'),
(4, 'Ги де Мопассан', 'Жизнь — гора: поднимаешься медленно, спускаешься быстро.'),
(5, 'Конфуций', 'Когда, совершив ошибку, не исправил её, это и называется совершить ошибку.');

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_sections`
--

CREATE TABLE IF NOT EXISTS `xyz_sections` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `img` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `meta_desc` varchar(255) NOT NULL,
  `meta_key` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Дамп данных таблицы `xyz_sections`
--

INSERT INTO `xyz_sections` (`id`, `title`, `img`, `description`, `meta_desc`, `meta_key`) VALUES
(1, 'HTML', 'html.jpg', '<p><b>HTML</b> - это гипертекстовый язык разметки, на котором создаётся абсолютное большинство страниц в Интернете. Его знание необходимо абсолютно любому Web-мастеру, причём совершенно не важно, как Вы создаёте сайты: абсолютно с нуля или же с помощью какой-нибудь <b>CMS</b>. И в первом, и во втором случае Вы будете использовать <b>язык HTML</b>.</p><p>Поэтому данный раздел сайта является обязательным к изучению абсолютно для всех Web-мастеров.</p><p>Язык <b>HTML</b>, несмотря на свою простоту, является необычайно важным для изучения. Надеюсь, здесь даже споров и сомнений у Вас не возникнет.</p><p>Сам язык <b>HTML</b> состоит из множества элементов, так называемых <b>тегов HTML</b>. Каждый <b>тег HTML</b> выполняет свою задачу: одни вставляют ссылку, другие картинку, третьи создают таблицы для выравнивания других тегов, четвёртые позволяют делать отдельные блоки на странице, - все эти элементы Вы будете использовать при <a href="http://myrusakov.ru/" title="Создание своего сайта">создании своих сайтов</a>. И вот почти со всеми <b>HTML тегами</b> я Вам и предлагаю познакомиться в соответствующей категории, посвящённой <a title="Основы HTML" href="http://myrusakov.ru/html-osnovy.html">основам HTML</a>. В этой категории собраны статьи, которые позволят любому человеку уже начать создавать свой сайты. Прочитав и освоив то, что написано в данной категории, в принципе, уже достаточно для создания многих сайтов, которые Вы ежедневно видите в сети.</p><p>Так же не так давно появился <b>HTML 5</b>. Это расширенный стандарт языка гипертекстовой разметки, который ждали почти 10 лет. В него вошло множество новых элементов, расширяющих возможности Web-мастеров при вёрстке сайтов, в частности. Данному стандарту на сайте отведена специальная категория, которая так и называется <a title="HTML 5" href="http://myrusakov.ru/html-5.html">HTML 5</a>. В этой категории я познакомлю Вас с новыми элементами и их назначением. Конечно, будет множество примеров <b>HTML-кода</b>.</p><p>Разумеется, все материалы <b>абсолютно бесплатны</b>, чтобы любой желающий мог познакомиться с этим, без спору, очень интересным делом - <b>созданием сайта на HTML</b>.</p>\r\n<p>Бесплатный курс по основам <b>HTML</b>: <a rel="external" href="http://srs.myrusakov.ru/html">http://srs.myrusakov.ru/html</a></p><h3 style="text-align: center;">Свежие материалы по созданию сайта на HTML</h3>', 'Множество материала по основам HTML, а также по новому стандарту - HTML 5.', 'html, html 5, язык html, создать сайт на html, html теги'),
(2, 'CSS', 'css.jpg', '<p><b>CSS</b> (<i>Cascading Style Sheets)</i> - это каскадные таблицы стилей. Или, если объяснить это более понятным языком, <b>CSS</b> - это технология описания внешнего вида страниц, написанных на <b>HTML</b>.</p><p>Главная задача таблиц стилей - это разделить код страниц и её внешний вид. Возможно, что Вы спросите: "<i>А зачем нужно так делать?</i>". Ответ очевиден: "<i>Для большей мобильности</i>". Действительно, допустим у Вас имеется сайт, на котором 100 страниц (это совсем немного). Допустим, шрифт обычного текста у Вас на сайте - 15pt. И представьте, что Вам захотелось сделать не 15pt, а 17pt, что Вы будете делать?</p><p>Если Вы не используете <b>CSS</b>, то Вам придётся в каждой из 100 страниц, в каждом месте, где вставляется текст исправлять с 15pt на 17pt. Разумеется, займёт это несколько часов.</p><p>Если Вы используете <b>CSS</b>, то тогда Вам требуется лишь открыть специальный файл со стилями, найти в этом файле задание размера шрифта и всего один раз изменить с 15pt на 17pt. И Ваш сайт полностью и сразу преобразится. Я уже молчу про массу возможностей создания необычных дизайнерских решений с помощью <b>CSS</b>, которые невозможно реализовать только с помощью <b>HTML</b>.</p><p>Уверен, что Вы уже осознали преимущество <b>CSS</b> перед обычной "смесью" структуры и стиля.</p><p>А теперь встаёт главный вопрос: как же познакомиться с этой чудо-технологией и где можно узнать про эту несомненно важную часть создания своего сайта, чтобы у Вас появилось ещё больше информации о том: "<a href="http://myrusakov.ru/" title="Как создать свой сайт">Как создать свой сайт</a>".</p><p>Собственно, Вы уже нашли, что искали: в данном разделе сайта находится информация по <a href="http://myrusakov.ru/css-osnovy.html" title="CSS Основы">основам CSS</a>, где Вы сможете узнать обо всех <b>селекторах и атрибутах CSS</b>, которые Вам обязательно потребуется при создании дизайна сайта.</p><p>Полный курс по <b>HTML, CSS и по вёрстке сайтов</b>: <a rel="external" href="http://srs.myrusakov.ru/makeup">http://srs.myrusakov.ru/makeup</a></p><h3 style="text-align: center;">Свежие материалы по CSS</h3>', 'Различная информация и материалы по CSS - каскадным таблицам стилей.', 'css, селекторы css, атрибуты css');

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_sef`
--

CREATE TABLE IF NOT EXISTS `xyz_sef` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link` varchar(255) NOT NULL,
  `alias` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=22 ;

--
-- Дамп данных таблицы `xyz_sef`
--

INSERT INTO `xyz_sef` (`id`, `link`, `alias`) VALUES
(1, '/poll', 'poll'),
(2, '/register', 'register'),
(3, '/activate', 'activate'),
(4, '/sregister', 'sregister'),
(5, '/reset', 'reset'),
(6, '/sreset', 'sreset'),
(7, '/logout', 'logout'),
(8, '/remind', 'remind'),
(9, '/search', 'search'),
(10, '/user/editprofile', 'user/editprofile'),
(11, '/section?id=1', 'html'),
(12, '/section?id=2', 'css'),
(13, '/category?id=1', 'html-osnovy'),
(14, '/category?id=2', 'html-5'),
(15, '/category?id=3', 'css-osnovy'),
(16, '/article?id=1', 'html-sozdanie-sajta'),
(17, '/article?id=2', 'html-ssylki-i-izobrageniya'),
(18, '/article?id=3', 'css-sintaksis'),
(19, '/article?id=4', 'css-kak-zadat-stil'),
(20, '/article?id=5', 'css-selektory'),
(21, '/article?id=6', 'srs');

-- --------------------------------------------------------

--
-- Структура таблицы `xyz_users`
--

CREATE TABLE IF NOT EXISTS `xyz_users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `login` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `password` varchar(32) NOT NULL,
  `name` varchar(255) NOT NULL,
  `avatar` varchar(255) DEFAULT NULL,
  `date_reg` int(10) unsigned NOT NULL,
  `activation` varchar(32) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `login` (`login`,`email`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

--
-- Дамп данных таблицы `xyz_users`
--

INSERT INTO `xyz_users` (`id`, `login`, `email`, `password`, `name`, `avatar`, `date_reg`, `activation`) VALUES
(1, 'User1', 'user1@mail.ru', 'c9f96d0a92a4cf0ce52250f62f52c2c9', 'Алексей', NULL, 1399121160, ''),
(2, 'Aleks', 'aleks@mail.ru', '8bbcd6a4c613267b9d84114c06d32b17', 'Александр', 'user_2.gif', 1399121267, ''),
(3, 'alekss', 'asd@mail.ru', '8bbcd6a4c613267b9d84114c06d32b17', 'Алекс', NULL, 1399918936, '5371115820d10'),
(4, 'aleksss', 'asdd@mail.ru', '8bbcd6a4c613267b9d84114c06d32b17', 'Алекс', NULL, 1399918986, '5371118a6895a'),
(5, 'al', 'asda@mail.ru', '235d5c2906bc9f6b73ac73d159d27c75', 'Алекс', '53711c89a1928.jpeg', 1399919061, '');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
